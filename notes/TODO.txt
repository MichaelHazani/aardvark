Current:
* Let N clients connect to one server -- seems to be working
* Use the new core external memory stuff in 1.1 to pull in the shared DXGI handles from CEF. Example using older NV extensions here: https://developer.nvidia.com/getting-vulkan-ready-vr
* Make panel node type pick the model automatically
* Add a function to set DXGI handle for the panel
* some kind of default lighting that isn't blue
* Show frame info in the UI?
* Maybe switch to named pipes?
* Clients hanging up should clear apps/SGs (for now the renderer cleans up apps on the way out.)



========= DEAL WITH THIS NEXT ===========

Vulkan isn't complaining about textures anymore. They still seem to be blank. 

Maybe this is the CEF draw bug? Maybe something else?

Maybe read the texture back and write it to disk at the CEF level? 
Maybe put something that updates into the page to make sure it's updating?


========= DEAL WITH THIS NEXT ===========



Step 1 - Make some pixels from C++ on screen (done)
Step 2 - Make the pixels appear in a scene app (done)
Step 3 - Make some pixels from Javascript (done)

Step 4 - Make a quad from Javascript
Step 5 - Make input work back to Javascript/HTML/CSS
Step 6 - Make the pixels/input layer on top of other apps


